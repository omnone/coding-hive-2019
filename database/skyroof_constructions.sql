USE skyroof_constructions;

CREATE TABLE IF NOT EXISTS User (
    userID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    username VARCHAR(30) NOT NULL,
    email VARCHAR(80) NOT NULL,
    password_ VARCHAR(80) NOT NULL,
    PRIMARY KEY (userID),
    UNIQUE(username,email)
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS Project (
    projectID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name_ VARCHAR(80) NOT NULL,
    PRIMARY KEY (projectID)
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS Status_ (
    statusID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
    description_ VARCHAR(255) NOT NULL,
    PRIMARY KEY (statusID)
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS permission (
    permissionTableID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    userID INT UNSIGNED NOT NULL,
    projectID MEDIUMINT UNSIGNED NOT NULL,
    permissionID TINYINT NOT NULL, #0 READ || 1 READ CREATE WRITE|| 2 READ CREATE WRITE DELETE
    PRIMARY KEY (permissionTableID),
    FOREIGN KEY (userID) REFERENCES user(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (projectID) REFERENCES project(projectID) ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=INNODB;



CREATE TABLE IF NOT EXISTS Issue (
    issueID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    projectID MEDIUMINT UNSIGNED NOT NULL,
    statusID TINYINT UNSIGNED NOT NULL,
    title VARCHAR(255) NOT NULL,
    description_ TEXT,
    assignor INT UNSIGNED NOT NULL,
    assignee INT UNSIGNED NOT NULL,
    type_ TINYINT UNSIGNED NOT NULL, #0 ERROR || 1 IMPROVEMENT || 2 OTHER
    otherDetails TINYTEXT,
    PRIMARY KEY (issueID),
    FOREIGN KEY (projectID) REFERENCES Project(projectID) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (statusID) REFERENCES Status_(statusID) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (assignor) REFERENCES User(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (assignee) REFERENCES User(userID) ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=INNODB;